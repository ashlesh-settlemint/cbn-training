[
    {
        "id": "d6b1ec23750a1438",
        "type": "tab",
        "label": "Bond",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5aac88ce351b2e3d",
        "type": "template",
        "z": "d6b1ec23750a1438",
        "name": "",
        "field": "connection",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"apiKey\": \"bpaas-463e8fEd24eBD1A8FC74Aa7Ea062b4c521e07cb0\",\n    \"node\": {\n        \"rpcEndpoint\": \"https://node01-225d.settlemint.com\"\n    },\n    \"from\": \"0x348694e2e18c4eb3780577797E95dB99121b24e1\",\n    \"contract\": {\n        \"address\": \"0xCC1D6ae39Ab6Eda48619C32d3216ae4dFD706827\",\n        \"abi\": [\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"name_\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol_\",\n                        \"type\": \"string\"\n                    }\n                ],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"constructor\"\n            },\n            {\n                \"anonymous\": false,\n                \"inputs\": [\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"owner\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"approved\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"Approval\",\n                \"type\": \"event\"\n            },\n            {\n                \"anonymous\": false,\n                \"inputs\": [\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"owner\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"operator\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": false,\n                        \"internalType\": \"bool\",\n                        \"name\": \"approved\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                \"name\": \"ApprovalForAll\",\n                \"type\": \"event\"\n            },\n            {\n                \"anonymous\": false,\n                \"inputs\": [\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"from\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"address\",\n                        \"name\": \"to\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"indexed\": true,\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"Transfer\",\n                \"type\": \"event\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"to\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"approve\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"owner\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"name\": \"balanceOf\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"bondToDetails\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"bondId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"faceValue\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"couponRate\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"maturityTimestamp\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"bondId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"burnBond\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"bondId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"faceValue\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"couponRate\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"maturityTimestamp\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"createBond\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"getApproved\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"owner\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"operator\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"name\": \"isApprovedForAll\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"bool\",\n                        \"name\": \"\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"to\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"bondId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"mintBond\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [],\n                \"name\": \"name\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"ownerOf\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"\",\n                        \"type\": \"address\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"from\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"to\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"safeTransferFrom\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"from\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"to\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"bytes\",\n                        \"name\": \"data\",\n                        \"type\": \"bytes\"\n                    }\n                ],\n                \"name\": \"safeTransferFrom\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"operator\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"bool\",\n                        \"name\": \"approved\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                \"name\": \"setApprovalForAll\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"bytes4\",\n                        \"name\": \"interfaceId\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                \"name\": \"supportsInterface\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"bool\",\n                        \"name\": \"\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [],\n                \"name\": \"symbol\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"tokenURI\",\n                \"outputs\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n            },\n            {\n                \"inputs\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"from\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"to\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"tokenId\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"name\": \"transferFrom\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n            }\n        ]\n    }\n}",
        "output": "json",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "4d594d887e68d7e3"
            ]
        ]
    },
    {
        "id": "ed2f6ea8314a80e9",
        "type": "inject",
        "z": "d6b1ec23750a1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "5aac88ce351b2e3d"
            ]
        ]
    },
    {
        "id": "4d594d887e68d7e3",
        "type": "function",
        "z": "d6b1ec23750a1438",
        "name": "",
        "func": "global.set(\"connectionObj\", msg.connection);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d45b238e025daae0",
        "type": "function",
        "z": "d6b1ec23750a1438",
        "name": "Fetch transaction receipt",
        "func": "///////////////////////////////////////////////////////////\n// Configuration                                         //\n///////////////////////////////////////////////////////////\n\nconst rpcEndpoint = msg.connection.node.rpcEndpoint;\nconst apiKey = msg.connection.apiKey;\n\n///////////////////////////////////////////////////////////\n// Logic                                                 //\n///////////////////////////////////////////////////////////\n\nconst provider = new ethers.providers.JsonRpcProvider(`${rpcEndpoint}/${apiKey}`);\nmsg.payload.receipt = await provider.getTransactionReceipt(msg.payload.txHash);\n\n///////////////////////////////////////////////////////////\n// End                                                   //\n///////////////////////////////////////////////////////////\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ethers",
                "module": "ethers"
            }
        ],
        "x": 780,
        "y": 300,
        "wires": [
            [
                "625823c62bba2fc1"
            ]
        ]
    },
    {
        "id": "7b65e9f5daf9d783",
        "type": "function",
        "z": "d6b1ec23750a1438",
        "name": "createBond",
        "func": "///////////////////////////////////////////////////////////\n// Configuration                                         //\n///////////////////////////////////////////////////////////\n\nconst rpcEndpoint = msg.connection.node.rpcEndpoint;\nconst apiKey = msg.connection.apiKey;\nconst from = msg.connection.from;\nconst address = msg.connection.contract.address;\nconst abi = msg.connection.contract.abi;\n\n\n///////////////////////////////////////////////////////////\n// Logic                                                 //\n///////////////////////////////////////////////////////////\n\nconst provider = new ethers.providers.JsonRpcProvider(`${rpcEndpoint}/${apiKey}`);\nconst signer = new ethers.VoidSigner(from, provider)\nconst contract = new ethers.Contract(address, abi, signer);\n\nconst tx = await contract.populateTransaction.createBond(msg.payload.bondId, msg.payload.faceValue,msg.payload.couponRate, msg.payload.maturityTimestamp);\n\nconst result = await provider.send('eth_sendTransaction', [tx])\nmsg.payload = {txHash: result}\n\n\n\n///////////////////////////////////////////////////////////\n// End                                                   //\n///////////////////////////////////////////////////////////\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ethers",
                "module": "ethers"
            }
        ],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "d45b238e025daae0"
            ]
        ]
    },
    {
        "id": "1bc63e14669318ef",
        "type": "delay",
        "z": "d6b1ec23750a1438",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 380,
        "wires": [
            [
                "d45b238e025daae0"
            ]
        ]
    },
    {
        "id": "625823c62bba2fc1",
        "type": "switch",
        "z": "d6b1ec23750a1438",
        "name": "Check Receipt Available",
        "property": "payload.receipt",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "1bc63e14669318ef"
            ],
            [
                "cbde75c0a5505909"
            ]
        ]
    },
    {
        "id": "cbde75c0a5505909",
        "type": "switch",
        "z": "d6b1ec23750a1438",
        "name": "Check Receipt Status",
        "property": "payload.receipt.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 360,
        "wires": [
            [
                "bfa510f775ef3bc4"
            ],
            [
                "e1730d3ec1a90503"
            ]
        ]
    },
    {
        "id": "819de587fc912ece",
        "type": "function",
        "z": "d6b1ec23750a1438",
        "name": "",
        "func": "msg.connection = global.get(\"connectionObj\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "7b65e9f5daf9d783",
                "51bdeea1f22cee62"
            ]
        ]
    },
    {
        "id": "bfa510f775ef3bc4",
        "type": "http response",
        "z": "d6b1ec23750a1438",
        "name": "Success",
        "statusCode": "200",
        "headers": {},
        "x": 1620,
        "y": 280,
        "wires": []
    },
    {
        "id": "e1730d3ec1a90503",
        "type": "http response",
        "z": "d6b1ec23750a1438",
        "name": "Failed",
        "statusCode": "500",
        "headers": {},
        "x": 1630,
        "y": 420,
        "wires": []
    },
    {
        "id": "05631483a69e6ef7",
        "type": "http in",
        "z": "d6b1ec23750a1438",
        "name": "",
        "url": "/createbond",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 105,
        "y": 329,
        "wires": [
            [
                "819de587fc912ece"
            ]
        ]
    },
    {
        "id": "5f414c7f73fe7403",
        "type": "comment",
        "z": "d6b1ec23750a1438",
        "name": "Create Bond API",
        "info": "",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "51bdeea1f22cee62",
        "type": "debug",
        "z": "d6b1ec23750a1438",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "connection",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 160,
        "wires": []
    }
]